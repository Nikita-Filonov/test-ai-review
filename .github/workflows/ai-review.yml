name: ü§ñ AI Review

on:
  workflow_dispatch:
    inputs:
      review-command:
        type: choice
        default: "run"
        options: [ run, run-inline, run-context, run-summary ]
        required: true
        description: "AI Review command"

      pull-request-number:
        type: string
        required: true
        description: "Pull request number"

jobs:
  ai-review:
    name: Run AI Review
    runs-on: ubuntu-latest

    services:
      ollama:
        image: ollama/ollama:latest
        ports: [ 11434:11434 ]

    steps:
      - name: üß± Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚è≥ Wait for Ollama to start
        run: |
          echo "Waiting for Ollama service to become ready..."
          for i in $(seq 1 30); do
            if curl -s http://localhost:11434/api/version; then
              echo "‚úÖ Ollama is ready."
              break
            fi
            echo "‚è≥ Attempt $i: still waiting..."
            sleep 3
          done

      - name: üì¶ Pull model
        run: |
          echo "üì• Downloading model 'mistral'..."
          curl -X POST http://localhost:11434/api/pull \
            -H "Content-Type: application/json" \
            -d '{"model": "mistral"}'

      - name: üî• Warm up model
        run: |
          echo "üî• Warming up model..."
          curl -s -X POST http://localhost:11434/api/chat \
            -H "Content-Type: application/json" \
            -d '{"model":"mistral","stream":false,"messages":[{"role":"user","content":"Hello!"}]}'
          echo "‚úÖ Warm-up complete."

      - name: üöÄ Run AI Review
        uses: Nikita-Filonov/ai-review@v0.27.0
        env:
          AI_REVIEW_CONFIG_FILE_YAML: ./configs/ai-review.yaml

          VCS__HTTP_CLIENT__API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VCS__PIPELINE__OWNER: ${{ github.repository_owner }}
          VCS__PIPELINE__REPO: ${{ github.event.repository.name }}
          VCS__PIPELINE__PULL_NUMBER: ${{ inputs.pull-request-number }}

        with:
          review-command: ${{ inputs.review-command }}
